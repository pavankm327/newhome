!function (t, i, n, o) { function e(i, n) { this.element = i, this.options = t.extend({}, u, n), this._defaults = u, this._name = h, this.init() } var s, a, c, h = "pinterest_grid", u = { padding_x: 10, padding_y: 10, no_columns: 3, margin_bottom: 50, single_column_breakpoint: 700 }; e.prototype.init = function () { var n, o = this; t(i).resize(function () { clearTimeout(n), n = setTimeout(function () { o.make_layout_change(o) }, 11) }), o.make_layout_change(o), setTimeout(function () { t(i).resize() }, 500) }, e.prototype.calculate = function (n) { var o = this, e = 0, h = t(this.element); h.width(); a = t(this.element).children(), c = !0 === n ? h.width() - o.options.padding_x : (h.width() - o.options.padding_x * o.options.no_columns) / o.options.no_columns, a.each(function () { t(this).css("width", c) }), s = o.options.no_columns, a.each(function (i) { var a, h = 0, u = 0, l = t(this), p = l.prevAll(); a = !1 === n ? i % s : 0; for (var d = 0; d < s; d++) l.removeClass("c" + d); i % s == 0 && e++, l.addClass("c" + a), l.addClass("r" + e), p.each(function (i) { t(this).hasClass("c" + a) && (u += t(this).outerHeight() + o.options.padding_y) }), h = !0 === n ? 0 : i % s * (c + o.options.padding_x), l.css({ left: h, top: u }) }), this.tallest(h), t(i).resize() }, e.prototype.tallest = function (i) { for (var n = [], o = 0, e = 0; e < s; e++) { var a = 0; i.find(".c" + e).each(function () { a += t(this).outerHeight() }), n[e] = a } o = Math.max.apply(Math, n), i.css("height", o + (this.options.padding_y + this.options.margin_bottom)) }, e.prototype.make_layout_change = function (n) { t(i).width() < n.options.single_column_breakpoint ? n.calculate(!0) : n.calculate(!1) }, t.fn[h] = function (i) { return this.each(function () { t.data(this, "plugin_" + h) || t.data(this, "plugin_" + h, new e(this, i)) }) } } (jQuery, window, document);